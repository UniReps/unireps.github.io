name: Submission Validation and Preview

on:
  pull_request:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all branches and full history
        
    - name: Install the latest version of uv with caching
      id: setup-uv
      uses: astral-sh/setup-uv@v1
      with:
        enable-cache: true

    - name: Run validation script
      run: uv run scripts/submission_check.py ${{ github.event.pull_request.base.ref }}

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "3.2.2"
        bundler-cache: true

    - name: Install and Build ðŸ”§
      run: |
        pip3 install --upgrade jupyter
        export JEKYLL_ENV=production
        bundle exec jekyll build

    - name: Purge unused CSS ðŸ§¹
      run: |
        npm install -g purgecss
        purgecss -c purgecss.config.js

    - name: Deploy to Submission Branch
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site
        destination_dir: submission
        
    - name: Install GitHub CLI
      run: sudo apt-get install gh

    - name: Post Preview Link to PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PREVIEW_URL=https://${{ github.repository_owner }}.github.io/${{ github.repository_id }}/submission/
        COMMENT_BODY="Preview of your submission is available at: $PREVIEW_URL"

        # Fetch the existing comments on the pull request
        COMMENTS=$(gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments --jq '.[].body')

        # Check if a preview comment already exists
        if echo "$COMMENTS" | grep -q "Preview of your submission is available at"; then
          # Find the comment ID and update the comment
          COMMENT_ID=$(gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments --jq '.[] | select(.body | contains("Preview of your submission is available at")) | .id')
          gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID --method PATCH -f body="$COMMENT_BODY"
        else
          # Create a new comment if no preview comment exists
          gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments --method POST -f body="$COMMENT_BODY"
        fi