<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://unireps-blog.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/><link href="https://unireps-blog.github.io/blog/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-10T20:18:24+00:00</updated><id>https://unireps-blog.github.io/blog/feed.xml</id><title type="html">blank</title><entry><title type="html">Submission Guidelines</title><link href="https://unireps-blog.github.io/blog/2024/guidelines/" rel="alternate" type="text/html" title="Submission Guidelines"/><published>2024-10-09T00:00:00+00:00</published><updated>2024-10-09T00:00:00+00:00</updated><id>https://unireps-blog.github.io/blog/2024/guidelines</id><content type="html" xml:base="https://unireps-blog.github.io/blog/2024/guidelines/"><![CDATA[<p>Welcome to the <strong>UniReps Blogpost Submission</strong> guide! This page outlines the steps to submit your blogpost to the UniReps Workshop, where you can share your insights, spark discussions, and connect with the community. We‚Äôre excited you‚Äôre interested in contributing!</p> <p>To manage the blogpost track, we rely on <a href="https://github.com/alshedivat/al-folio">al-folio</a>, a <a href="https://jekyllrb.com">Jekyll</a> theme for academic websites. If this is all new to you, don‚Äôt worry. It‚Äôs simpler than it sounds and <strong>we are available for any questions you might have</strong>.</p> <h2 id="getting-started">Getting Started</h2> <h3 id="fork-the-repository">Fork the Repository</h3> <p>Start by <strong>forking the repository</strong>. You can do that <a href="https://github.com/UniReps/UniReps">here</a>. Forking creates your own copy of the project where you‚Äôll be able to freely work on your post before submitting it via a pull request (PR).</p> <h3 id="clone-your-fork-locally">Clone Your Fork Locally</h3> <p>Next, clone your new repository to your local machine so you can start editing:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone git@github.com:&lt;your-username&gt;/&lt;your-repo-name&gt;.git
<span class="nb">cd</span> &lt;your-repo-name&gt;
</code></pre></div></div> <p>You could even use the GitHub web interface to directly write the blogpost, but we recommend cloning the repository for a smoother experience.</p> <h3 id="preview-the-website-locally">Preview the Website Locally</h3> <p>We‚Äôve got a few options depending on your setup. Choose what works best for you:</p> <ul> <li> <p><strong>Option 1: Jekyll</strong><br/> If you have <a href="https://jekyllrb.com/">Jekyll</a> installed, run:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install
</span>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div> </div> </li> <li> <p><strong>Option 2: Docker</strong><br/> If Docker is your thing, simply run:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up
</code></pre></div> </div> </li> <li> <p><strong>Option 3: VS Code</strong><br/> If you are a <strong>VS Code</strong> user, we suggest using the <a href="https://code.visualstudio.com/docs/devcontainers/containers">Dev Container</a> feature, and it will take care of the environment setup for you.</p> </li> </ul> <p>All these options will start a local server, and you‚Äôll be able to preview the website at <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a>.</p> <hr/> <h2 id="writing-your-post">Writing Your Post</h2> <p>Now to the exciting part‚Äî<strong>writing your blogpost</strong>!</p> <h3 id="create-a-new-post">Create a New Post</h3> <p>Head over to the <code class="language-plaintext highlighter-rouge">_posts/</code> directory and create a new file following this format:</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>_posts/YYYY-MM-DD-title.md
</code></pre></div></div> <p>A great starting point is the template <code class="language-plaintext highlighter-rouge">/_posts/2024-10-09-template.md</code>, the original one from <a href="https://distill.pub">Distill</a>. Create a <strong>copy</strong> of it (it‚Äôs important, don‚Äôt directly edit it), rename it, and edit it for your post. It‚Äôs already structured for you!</p> <h3 id="add-media-optional">Add Media (Optional)</h3> <p>If your post includes media (we recommend to include them to exploit the blogpost format at its best), here‚Äôs how to add them:</p> <ul> <li><strong>Images</strong>: Place images in the folder <code class="language-plaintext highlighter-rouge">assets/img/YYYY-MM-DD-title/</code>.</li> <li><strong>Plotly Interactive Figures</strong>: Drop them into <code class="language-plaintext highlighter-rouge">assets/plotly/YYYY-MM-DD-title/</code>.</li> <li><strong>Citations</strong>: Save them as a BibTeX file (<code class="language-plaintext highlighter-rouge">.bib</code>) in <code class="language-plaintext highlighter-rouge">assets/bibliography/YYYY-MM-DD-title.bib</code>.</li> <li><strong>Other file types</strong>: follow the structure of the <code class="language-plaintext highlighter-rouge">assets/</code> folder, placing them in the appropriate subfolder.</li> </ul> <hr/> <h2 id="submitting-your-blogpost">Submitting Your Blogpost</h2> <p>Ready to submit? Follow these steps:</p> <h3 id="push-your-changes">Push Your Changes</h3> <p>Push the changes from your local machine to your forked repository:</p> <p>As an example:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s2">"Blogpost submission: &lt;title&gt;"</span>
git push origin master
</code></pre></div></div> <h3 id="open-a-pull-request">Open a Pull Request</h3> <p>Now, head to your forked repository on GitHub and open a <strong>New Pull Request</strong>. Ensure the title reflects the topic of your blogpost, and double-check the description is clear and concise.</p> <hr/> <h2 id="review-and-publication">Review and Publication</h2> <p>Here‚Äôs what happens next:</p> <h3 id="automatic-checks">Automatic Checks</h3> <p>The repository is set up to run automatic checks on your submission so be sure to:</p> <ol> <li>Only create/edit new files, never edit existing ones from the original repository.</li> <li>Create one PR per blogpost submission (i.e., only one new .md file under the <code class="language-plaintext highlighter-rouge">_posts</code> directory).</li> <li>Place all the files in the appropriate directories with the submission pattern mentioned above.</li> </ol> <p>If everything looks good, the PR will be marked as ‚ÄúReady for Review‚Äù and you will also get a preview link to see how your blogpost will look like on the website.</p> <h3 id="review-process">Review Process</h3> <p>Your blogpost will be reviewed based on the live content (ignoring the commit history or previous drafts). The review process will focus on the following aspects:</p> <ul> <li><strong>Content</strong>: Is the content relevant for the community, insightful, and engaging?</li> <li><strong>Structure</strong>: Is the blogpost well-structured and easy to follow?</li> <li><strong>Media</strong>: Are the images, plots, and other media elements well-integrated?</li> <li><strong>Style</strong>: Is the writing clear, concise, and correct?</li> </ul> <h3 id="post-acceptance">Post-Acceptance</h3> <p>Once your blogpost is accepted, it will be merged into the main repository and published on the website. You will be notified via email and your blogpost will be shared on the workshop‚Äôs social media channels.</p> <hr/> <h2 id="questions">Questions?</h2> <p>If you need any help or run into any issues, don‚Äôt hesitate to reach out to us:</p> <ul> <li>Open an issue on the <a href="https://github.com/UniReps/UniReps">GitHub repository</a></li> <li>Email: unireps-workshop [at] university [dot] org</li> </ul> <p>üîµ We‚Äôre here to help! üî¥</p>]]></content><author><name>Valentino Maiorca</name></author><category term="guide,"/><category term="tutorial"/><summary type="html"><![CDATA[How to submit a blogpost to the UniReps Workshop]]></summary></entry><entry><title type="html">Blog Post Template</title><link href="https://unireps-blog.github.io/blog/2024/template/" rel="alternate" type="text/html" title="Blog Post Template"/><published>2024-10-09T00:00:00+00:00</published><updated>2024-10-09T00:00:00+00:00</updated><id>https://unireps-blog.github.io/blog/2024/template</id><content type="html" xml:base="https://unireps-blog.github.io/blog/2024/template/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well‚Äâ‚Äî‚Äâthe authors are human and it‚Äôs nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
<span class="k">return</span> <span class="nx">x</span> <span class="err">\</span><span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/blog/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
<span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
<span class="n">df</span><span class="p">,</span>
<span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
<span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
<span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
<span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="details-boxes">Details boxes</h2> <p>Details boxes are collapsible boxes which hide additional information from the user. They can be added with the <code class="language-plaintext highlighter-rouge">details</code> liquid tag:</p> <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you‚Äôll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ‚ãÖ‚ãÖ* Unordered sub-list.</li> <li>Actual numbers don‚Äôt matter, just that it‚Äôs a number ‚ãÖ‚ãÖ1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>‚ãÖ‚ãÖ‚ãÖYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we‚Äôll use three here to also align the raw Markdown).</p> <p>‚ãÖ‚ãÖ‚ãÖTo have a line break without a paragraph, you will need to use two trailing spaces.‚ãÖ‚ãÖ ‚ãÖ‚ãÖ‚ãÖNote that this line is separate, but within the same paragraph.‚ãÖ‚ãÖ ‚ãÖ‚ãÖ‚ãÖ(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li> <p>Unordered list can use asterisks</p> </li> <li> <p>Or minuses</p> </li> <li> <p>Or pluses</p> </li> </ul> <p><a href="https://www.google.com">I‚Äôm an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I‚Äôm an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I‚Äôm a reference-style link</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here‚Äôs our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don‚Äôt need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let‚Äôs keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here‚Äôs a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but‚Ä¶ This line is only separated by a single newline, so it‚Äôs a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[An example of a Distill-style blog post and main elements]]></summary></entry><entry><title type="html">Learning Embedding Spaces with Metrics via Contrastive Learning |</title><link href="https://unireps-blog.github.io/blog/2024/learning-embedding-spaces-with-metrics-via-contrastive-learning/" rel="alternate" type="text/html" title="Learning Embedding Spaces with Metrics via Contrastive Learning |"/><published>2024-06-13T00:00:00+00:00</published><updated>2024-06-13T00:00:00+00:00</updated><id>https://unireps-blog.github.io/blog/2024/learning-embedding-spaces-with-metrics-via-contrastive-learning-</id><content type="html" xml:base="https://unireps-blog.github.io/blog/2024/learning-embedding-spaces-with-metrics-via-contrastive-learning/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[GRaM Workshop]]></summary></entry></feed>